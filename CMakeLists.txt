cmake_minimum_required(VERSION 2.8.7)
project(reginject C CXX)

if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "No build type selected, default to Debug")
  set(CMAKE_BUILD_TYPE "Debug")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -std=c++11 -stdlib=libc++")

file(GLOB_RECURSE reginject_HEADERS "src/*.h")

set (reginject_INCLUDE_DIRS "")
foreach (_headerFile ${reginject_HEADERS})
    get_filename_component(_dir ${_headerFile} PATH)
    list (APPEND reginject_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES reginject_INCLUDE_DIRS)

include_directories(${reginject_INCLUDE_DIRS})

file(GLOB liberation_SRC
   "src/*.cc"
   "src/*.c"
)

if (NOT DEFINED IOS_PLATFORM)
    file(GLOB liberation_arch_specific_SRC
        "src/x86_64/*.cc"
    )
else()
    file(GLOB liberation_arch_specific_SRC
        "src/ARMv7/*.cc"
        "src/AArch64/*.cc"
    )
endif()

file(GLOB liberation_test_SRC
        "tests/main.cc"
)

add_library(reginject STATIC ${liberation_SRC} ${liberation_arch_specific_SRC})

add_executable(reginject_test ${liberation_test_SRC})

target_link_libraries(reginject_test reginject "-framework Security")

add_custom_target(install
    COMMAND make
    COMMAND ldid -S${CMAKE_SOURCE_DIR}/ent.plist ${CMAKE_SOURCE_DIR}/build/reginject_test
    COMMAND scp -P $ENV{THEOS_DEVICE_PORT} ${CMAKE_SOURCE_DIR}/build/reginject_test root@$ENV{THEOS_DEVICE_IP}:/usr/bin/reginject
)
